publish {
  telemetry = [
    {
      name = "tcs.zenithAngle"
      description = """During an LGS or NGS AO observation, the NFIRAOS RTC updates
          the list of non-illuminated or partially illuminated WFS sub-apertures due to the
          telescope structure obscuration, which rotates with the telescope zenith angle.

          During LGS, NGS or seeing limited operations, the NFIRAOS RTC offloads the persistent
          low spatial frequency components of the DM and TTS commands to the telescope systems.
          The offload computation includes a rotation step, which is based upon the current
          telescope zenith angle.

          During LGS, NGS or seeing limited operations, the NFIRAOS Component Controller updates
          the NGS ADC prism rotation angles based upon the telescope zenith angle and the telescope
          parallactic angle.

          During LGS observations and if a pulsed laser format is used for the TMT Laser System,
          the LGS WFS start of the integration time and length of the integration time are updated
          based upon the telescope zenith angle."""
      rate = 20
      archive = true
      attributes = [
        {
          name = zenithAngle
          description = "Actual zenith angle of the telescope"
          type = number
          minimum = 1
          maximum = 65
          default = 10
          units = deg
        }
      ]
    }
    {
      name = "tcs.demandZenithAngle"
      description = """The LGS trombone focus mechanism is positioned by the NFIRAOS
          Component Controller at the beginning of an observation based on the LGS trombone focus
          mechanism final position computed during the previous observation and the destination
          zenith angle."""
      rate = 10 // XXX TODO: add value that means "Upon change at the beginning of an observation"?
      archive = true
      attributes = [
        {
          name = demandZenithAngle
          description = "Destination zenith angle of the telescope defined before starting the telescope slew"
          type = number
          minimum = 1
          maximum = 65
          units = deg
        }
      ]
    }
    {
      name = "tcs.parallacticAngle"
      description = """During LGS, NGS or seeing limited operations, the NFIRAOS
            Component Controller updates the NFIRAOS NGS ADC prism rotation angles based upon
            the telescope zenith angle and the telescope parallactic angle."""
      rate = 1
      archive = true
      attributes = [
        {
          name = parallacticAngle
          description = "Parallactic angle of the telescope"
          type = number
          units = deg
        }
      ]
    }
    {
      name = "tcs.nfiraos.visWfsPos"
      description = """The Telescope Control System (TCS) provides a continuous flow of
            NFIRAOS NGS WFS or TWFS  position demands to the NFIRAOS Component Controller to position
            the NGS WFS or TWFS during a science observation. The high order NGS wavefront sensor
            (NGS WFS) and the Truth Wavefront Sensors (TWFS) share the same acquisition mechanism,
            a pair of gimbal mirrors. The NGS WFS or the TWFS position demands are converted into
            gimbal mirrors commands by the NFIRAOS Component Controller."""
      rate = 20
      archive = true
      attributes = [
        {
          name = x
          description = "NFIRAOS visible WFS target X position"
          type = number
          units = Arcsec in focal plane
        }
        {
          name = y
          description = "NFIRAOS visible WFS target Y position"
          type = number
          units = Arcsec in focal plane
        }
      ]
    }
  ]

  events = [
    {
      name = a1
      description = "single value with min/max"
      type = integer
      minimum = -2
      maximum = 22
      units = m
    }
    {
      name = a2
      description = "array of float"
      type = array
      items = {
        type = number
      }
      minItems = 5
      maxItems = 5
      units = mm
    }
    {
      name = a3
      description = "enum choice"
      enum: [red, green, blue]
      default = green
    }
  ]

  eventStreams = [
    {
      name = "status1"
      description = "status1 description"
      rate = 0
      maxRate = 100
      archive = true
      archiveRate = 10
      attributes = [
        {
          name = a1
          description = "single value with min/max"
          type = integer
          minimum = -2
          maximum = 22
          units = m
        }
        {
          name = a2
          description = "array of float"
          type = array
          items = {
            type = number
          }
          minItems = 5
          maxItems = 5
          units = mm
        }
        {
          name = a3
          description = "enum choice"
          enum: [red, green, blue]
          default = green
        }
      ]
    }
    {
      name = "status2"
      description = "status2 description"
      rate = 10
      maxRate = 10
      archive = false
      attributes = [
        {
          name = a4
          description = "single value with min/max"
          type = integer
          minimum = -2
          maximum = 22
          units = m
        }
      ]
    }
  ]

  alarms = [
    {
      name = "alarm1"
      description = "First alarm"
      severity = minor
      archive = false
    },
    {
      name = "alarm2"
      description = "Second alarm"
      severity = major
      archive = true
    }
  ]

  health = [
    {
      name = "health1"
      description = "First health item lkjsldf lkj s dlkj lkjsdf lkjsdlfkj kjhkjh Hjkjhas k kjash  *here* and _there_ and so lkj lkj lkj kjhas kjhaskdjhkasdjh"
      valueType {
        enum = [good, ill, bad, unknown]
        default = good
      }
      rate = 0
      maxRate = 100
      archive = true
      archiveRate = 10
    },
    {
      name = "health2"
      description = "Second health item  asklj lkjsd lkj sdflkj fsdlkj dsflkjsd lkjds lkjsdf lkjsdf lkjsdf"
      valueType {
        type = integer
        default = 0
      }
      rate = 0
      maxRate = 10
      archive = false
      archiveRate = 1
    }

  ]

}
