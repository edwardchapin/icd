subsystem = NFIRAOS
component = nacqNhrwfs

publish {

  telemetry = [
    {
      name = "archived" // XXX group telemetry by archived state? rate?
      archive = true
      attributes = [
        {
          name = nacq_intTime
          description = "NACQ integration time"
          type = number
          units = seconds
        }
        {
          name = nacq_mag_state
          description = "NACQ magnifier stage deploy state"
          enum = [DEPLOY, EXTRACT, INTERSTITIAL, INTERMEDIATE, ERROR]
        }
      ]
    }

    {
      name = "notArchived" // XXX group telemetry by archived state? rate?
      archive = false
      attributes = [
        {
          name = nacq_detector_state
          description = "current state of the NACQ detector"
          enum = [EXPOSING, READING, IDLE, ERROR]
        }
        {
          name = nacq_period
          description = "NACQ continuous read period"
          type = number
          units = seconds
        }
        {
          name = nacq_contRead
          description = "NACQ continuous read state enabled"
          type = boolean
        }
        {
          name = nacq_mag_position
          description = "NACQ magnifier stage motor position"
          type = number
          units = TBD
        }
        {
          name = nacq_position
          description = "nominal position of the NACQ/NHRWFS stage for the NACQ "
          // array of 3 floating point numbers in mm
          type = array
          items = {
            type = number
            minItems = 3
            maxItems = 3
          }
          units = mm
        }
      ]
    }
  ]


  events = [
    {
      name = state
      description = "overall state"
      enum = [idle, busy, error]
    }
    {
      name = initialized
      description = "initialized state"
      type = boolean
    }
    {
      name = health
      description = "health state"
      enum = [good, ill, bad, unknown]
    }
    {
      name = heartbeat
      description = "software heartbeat"
      type = integer
    }
  ]


  health = [
    {
      name = "health"
      description = "Health state"
      valueType {
        enum = [good, ill, bad, unknown]
        default = good
      }
      rate = 0
      maxRate = 100
      archive = false
    }
    {
      name = "heartbeat"
      description = "Regular heartbeat message"
      valueType {
        type = integer
        default = 0
      }
      rate = 0
      maxRate = 10
      archive = false
    }

  ]

}
