subsystem = M1CS
component = glc

subscribe {
  description = """
     This section describes the telemetry events the TCS generates that are necessary for the M1CS system to operate.

     * To implement tracking, the TCS publishes the telescope position as a telemetry event. In order to minimize the tracking error
     the TCS will publish the demanded position (azimuth and elevation) with the time the demand position will be valid.

     * In order for M1CS to account for the position of the telescope as it moves across the sky it needs to know when the TCS changes
     state between tracking and slew.

     * Nominally the TCS controls the telescope focus via the M2CS. However the shape of each segment is ‘*fixed*’ for all elevations.
     As the gravity vector changes for different elevations the M1 mirror deforms and produces a scalloping effect in the 
     optical wave front. This scalloping effect can be observed in high-resolution sensors such as the NFIRAOS wave front 
     sensor camera. The TCS will publish the amount of focus correction the M1CS needs to apply to correct the scalloping.

  """
  telemetry = [
    {
      subsystem = TCS
      name = tcs.tpk.telescopeAltAz
      requiredRate = 10
      maxRate = 100
      usage = """
      To implement *tracking*, the TCS publishes the telescope position as a telemetry event. In order to minimize the tracking error
      the TCS will publish the demanded position (azimuth and elevation) with the time the demand position will be valid.
      """
    }
    {
      subsystem = TCS
      name = tcs.tpk.trackState
      requiredRate = 5
      usage = """
      In order for M1CS to account for the position of the telescope as it moves across the sky it needs to know when the TCS changes
      state between tracking and slew.
      """
    }
  ]

  eventStreams = [
    {
      subsystem = TCS
      name = tcs.cm.offloadZernikeMode
      requiredRate = 1
      usage = """
      Todo: Add usage description here.
      """
    }
  ]
}
